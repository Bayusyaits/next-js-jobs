import React, { useEffect, useCallback } from 'react'
import Head from 'next/head'
import {useRouter} from 'next/router'
import _cloneDeep from 'lodash.clonedeep'
import _debounce from 'lodash/debounce'
import {
  usePositions
} from 'store'
import Home from './HomeView'

export default function HomeContainer() {
  const router = useRouter()
  let jobsState = usePositions((state: any) => state.jobs)
  let setJobsLoading = usePositions((state: any) => state.jobs.setJobsLoading)
  let getJobs = usePositions((state: any) => state.jobs.getJobs)
  const jobs = _cloneDeep(jobsState)
  const {
    query,
    isLoading
  } = jobs
  const getData = _debounce((query) => {
    if (!isLoading) {
      setJobsLoading()
      getJobs(query, true)
    }
  }, 100)
  const handleLoadMore = _debounce((e: any) => {
    e.preventDefault()
    query.page++
    setJobsLoading()
    getJobs(query)
  }, 1000)
  const handleForm = (e: any) => {
    e.preventDefault()
    const form = Object.fromEntries(new FormData(e.target))
    const {
      full_time: f,
      ...obj
    }: any = {...form}
    let full_time = f === 'on'
    const q = {
      ...query,
      ...obj,
      full_time,
      page: 1
    }
    getData(q)
  }
  useEffect(() => {
    getData(query)
  }, [])
  const handler = {
    ...jobs,
    handleForm,
    handleLoadMore
  }
  return (
    <>
      <Head>
        <title>Home | Front-end</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Home 
        {...handler}
      />
    </>
  )
}
